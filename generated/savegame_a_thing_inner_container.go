// Code generated by rimworld-editor. DO NOT EDIT.

package generated

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type SavegameAThingInnerContainer struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	InnerList *types.Slice[string] `xml:"innerList"`
}

func (s *SavegameAThingInnerContainer) Assign(*xml.Element) error {
	return nil
}

func (s *SavegameAThingInnerContainer) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *SavegameAThingInnerContainer) Equal(*SavegameAThingInnerContainer) bool {
	return false
}

func (s *SavegameAThingInnerContainer) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *SavegameAThingInnerContainer) GetPath() string {
	return ""
}

func (s *SavegameAThingInnerContainer) Greater(*SavegameAThingInnerContainer) bool {
	return false
}

func (s *SavegameAThingInnerContainer) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *SavegameAThingInnerContainer) Less(*SavegameAThingInnerContainer) bool {
	return false
}

func (s *SavegameAThingInnerContainer) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *SavegameAThingInnerContainer) Val() *SavegameAThingInnerContainer {
	return nil
}

func (s *SavegameAThingInnerContainer) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
