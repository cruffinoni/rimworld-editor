// Code generated by rimworld-editor. DO NOT EDIT.

package storyteller

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type SelectionWeightCurvesPerFaction struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Faction                       string                         `xml:"faction"`
	SelectionWeightPerPointsCurve *SelectionWeightPerPointsCurve `xml:"selectionWeightPerPointsCurve"`
	Points                        *types.Slice[string]           `xml:"points"`
	Li                            *types.Slice[string]           `xml:"li"`
}

func (s *SelectionWeightCurvesPerFaction) Assign(*xml.Element) error {
	return nil
}

func (s *SelectionWeightCurvesPerFaction) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *SelectionWeightCurvesPerFaction) Equal(*SelectionWeightCurvesPerFaction) bool {
	return false
}

func (s *SelectionWeightCurvesPerFaction) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *SelectionWeightCurvesPerFaction) GetPath() string {
	return ""
}

func (s *SelectionWeightCurvesPerFaction) Greater(*SelectionWeightCurvesPerFaction) bool {
	return false
}

func (s *SelectionWeightCurvesPerFaction) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *SelectionWeightCurvesPerFaction) Less(*SelectionWeightCurvesPerFaction) bool {
	return false
}

func (s *SelectionWeightCurvesPerFaction) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *SelectionWeightCurvesPerFaction) Val() *SelectionWeightCurvesPerFaction {
	return nil
}

func (s *SelectionWeightCurvesPerFaction) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
