// Code generated by rimworld-editor. DO NOT EDIT.

package storyteller

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type MtbDaysByBiome struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	TemperateForest    int64 `xml:"TemperateForest"`
	BorealForest       int64 `xml:"BorealForest"`
	TropicalRainforest int64 `xml:"TropicalRainforest"`
	AridShrubland      int64 `xml:"AridShrubland"`
	Desert             int64 `xml:"Desert"`
	Tundra             int64 `xml:"Tundra"`
	TropicalSwamp      int64 `xml:"TropicalSwamp"`
	TemperateSwamp     int64 `xml:"TemperateSwamp"`
	ColdBog            int64 `xml:"ColdBog"`
	ExtremeDesert      int64 `xml:"ExtremeDesert"`
	IceSheet           int64 `xml:"IceSheet"`
	SeaIce             int64 `xml:"SeaIce"`
}

func (m *MtbDaysByBiome) Assign(*xml.Element) error {
	return nil
}

func (m *MtbDaysByBiome) CountValidatedField() int {
	if m.FieldValidated == nil {
		return 0
	}
	return len(m.FieldValidated)
}

func (m *MtbDaysByBiome) Equal(*MtbDaysByBiome) bool {
	return false
}

func (m *MtbDaysByBiome) GetAttributes() attributes.Attributes {
	return m.Attr
}

func (m *MtbDaysByBiome) GetPath() string {
	return ""
}

func (m *MtbDaysByBiome) Greater(*MtbDaysByBiome) bool {
	return false
}

func (m *MtbDaysByBiome) IsValidField(field string) bool {
	return m.FieldValidated[field]
}

func (m *MtbDaysByBiome) Less(*MtbDaysByBiome) bool {
	return false
}

func (m *MtbDaysByBiome) SetAttributes(attr attributes.Attributes) {
	m.Attr = attr
	return
}

func (m *MtbDaysByBiome) Val() *MtbDaysByBiome {
	return nil
}

func (m *MtbDaysByBiome) ValidateField(field string) {
	if m.FieldValidated == nil {
		m.FieldValidated = make(map[string]bool)
	}
	m.FieldValidated[field] = true
	return
}
