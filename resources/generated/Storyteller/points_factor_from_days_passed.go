// Code generated by rimworld-editor. DO NOT EDIT.

package storyteller

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type PointsFactorFromDaysPassed struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Points *types.Slice[string] `xml:"points"`
}

func (p *PointsFactorFromDaysPassed) Assign(*xml.Element) error {
	return nil
}

func (p *PointsFactorFromDaysPassed) CountValidatedField() int {
	if p.FieldValidated == nil {
		return 0
	}
	return len(p.FieldValidated)
}

func (p *PointsFactorFromDaysPassed) Equal(*PointsFactorFromDaysPassed) bool {
	return false
}

func (p *PointsFactorFromDaysPassed) GetAttributes() attributes.Attributes {
	return p.Attr
}

func (p *PointsFactorFromDaysPassed) GetPath() string {
	return ""
}

func (p *PointsFactorFromDaysPassed) Greater(*PointsFactorFromDaysPassed) bool {
	return false
}

func (p *PointsFactorFromDaysPassed) IsValidField(field string) bool {
	return p.FieldValidated[field]
}

func (p *PointsFactorFromDaysPassed) Less(*PointsFactorFromDaysPassed) bool {
	return false
}

func (p *PointsFactorFromDaysPassed) SetAttributes(attr attributes.Attributes) {
	p.Attr = attr
	return
}

func (p *PointsFactorFromDaysPassed) Val() *PointsFactorFromDaysPassed {
	return nil
}

func (p *PointsFactorFromDaysPassed) ValidateField(field string) {
	if p.FieldValidated == nil {
		p.FieldValidated = make(map[string]bool)
	}
	p.FieldValidated[field] = true
	return
}
