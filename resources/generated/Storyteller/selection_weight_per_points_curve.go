// Code generated by rimworld-editor. DO NOT EDIT.

package storyteller

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type SelectionWeightPerPointsCurve struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Points *types.Slice[string] `xml:"points"`
}

func (s *SelectionWeightPerPointsCurve) Assign(*xml.Element) error {
	return nil
}

func (s *SelectionWeightPerPointsCurve) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *SelectionWeightPerPointsCurve) Equal(*SelectionWeightPerPointsCurve) bool {
	return false
}

func (s *SelectionWeightPerPointsCurve) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *SelectionWeightPerPointsCurve) GetPath() string {
	return ""
}

func (s *SelectionWeightPerPointsCurve) Greater(*SelectionWeightPerPointsCurve) bool {
	return false
}

func (s *SelectionWeightPerPointsCurve) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *SelectionWeightPerPointsCurve) Less(*SelectionWeightPerPointsCurve) bool {
	return false
}

func (s *SelectionWeightPerPointsCurve) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *SelectionWeightPerPointsCurve) Val() *SelectionWeightPerPointsCurve {
	return nil
}

func (s *SelectionWeightPerPointsCurve) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
