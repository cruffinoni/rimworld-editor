// Code generated by rimworld-editor. DO NOT EDIT.

package storyteller

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type PopulationIntentFactorFromPopAdaptDaysCurve struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Points *types.Slice[string] `xml:"points"`
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) Assign(*xml.Element) error {
	return nil
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) CountValidatedField() int {
	if p.FieldValidated == nil {
		return 0
	}
	return len(p.FieldValidated)
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) Equal(*PopulationIntentFactorFromPopAdaptDaysCurve) bool {
	return false
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) GetAttributes() attributes.Attributes {
	return p.Attr
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) GetPath() string {
	return ""
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) Greater(*PopulationIntentFactorFromPopAdaptDaysCurve) bool {
	return false
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) IsValidField(field string) bool {
	return p.FieldValidated[field]
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) Less(*PopulationIntentFactorFromPopAdaptDaysCurve) bool {
	return false
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) SetAttributes(attr attributes.Attributes) {
	p.Attr = attr
	return
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) Val() *PopulationIntentFactorFromPopAdaptDaysCurve {
	return nil
}

func (p *PopulationIntentFactorFromPopAdaptDaysCurve) ValidateField(field string) {
	if p.FieldValidated == nil {
		p.FieldValidated = make(map[string]bool)
	}
	p.FieldValidated[field] = true
	return
}
