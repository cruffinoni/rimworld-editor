// Code generated by rimworld-editor. DO NOT EDIT.

package drugpolicydefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type DrugPolicyDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName            string                 `xml:"defName"`
	Label              string                 `xml:"label"`
	Entries            *types.Slice[*Entries] `xml:"entries"`
	AllowPleasureDrugs bool                   `xml:"allowPleasureDrugs"`
}

func (d *DrugPolicyDef) Assign(*xml.Element) error {
	return nil
}

func (d *DrugPolicyDef) CountValidatedField() int {
	if d.FieldValidated == nil {
		return 0
	}
	return len(d.FieldValidated)
}

func (d *DrugPolicyDef) Equal(*DrugPolicyDef) bool {
	return false
}

func (d *DrugPolicyDef) GetAttributes() attributes.Attributes {
	return d.Attr
}

func (d *DrugPolicyDef) GetPath() string {
	return ""
}

func (d *DrugPolicyDef) Greater(*DrugPolicyDef) bool {
	return false
}

func (d *DrugPolicyDef) IsValidField(field string) bool {
	return d.FieldValidated[field]
}

func (d *DrugPolicyDef) Less(*DrugPolicyDef) bool {
	return false
}

func (d *DrugPolicyDef) SetAttributes(attr attributes.Attributes) {
	d.Attr = attr
	return
}

func (d *DrugPolicyDef) Val() *DrugPolicyDef {
	return nil
}

func (d *DrugPolicyDef) ValidateField(field string) {
	if d.FieldValidated == nil {
		d.FieldValidated = make(map[string]bool)
	}
	d.FieldValidated[field] = true
	return
}
