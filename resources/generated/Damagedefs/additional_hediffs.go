// Code generated by rimworld-editor. DO NOT EDIT.

package damagedefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type AdditionalHediffs struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Hediff                             string  `xml:"hediff"`
	SeverityPerDamageDealt             float64 `xml:"severityPerDamageDealt"`
	VictimSeverityScaling              string  `xml:"victimSeverityScaling"`
	InverseStatScaling                 bool    `xml:"inverseStatScaling"`
	VictimSeverityScalingByInvBodySize bool    `xml:"victimSeverityScalingByInvBodySize"`
}

func (a *AdditionalHediffs) Assign(*xml.Element) error {
	return nil
}

func (a *AdditionalHediffs) CountValidatedField() int {
	if a.FieldValidated == nil {
		return 0
	}
	return len(a.FieldValidated)
}

func (a *AdditionalHediffs) Equal(*AdditionalHediffs) bool {
	return false
}

func (a *AdditionalHediffs) GetAttributes() attributes.Attributes {
	return a.Attr
}

func (a *AdditionalHediffs) GetPath() string {
	return ""
}

func (a *AdditionalHediffs) Greater(*AdditionalHediffs) bool {
	return false
}

func (a *AdditionalHediffs) IsValidField(field string) bool {
	return a.FieldValidated[field]
}

func (a *AdditionalHediffs) Less(*AdditionalHediffs) bool {
	return false
}

func (a *AdditionalHediffs) SetAttributes(attr attributes.Attributes) {
	a.Attr = attr
	return
}

func (a *AdditionalHediffs) Val() *AdditionalHediffs {
	return nil
}

func (a *AdditionalHediffs) ValidateField(field string) {
	if a.FieldValidated == nil {
		a.FieldValidated = make(map[string]bool)
	}
	a.FieldValidated[field] = true
	return
}
