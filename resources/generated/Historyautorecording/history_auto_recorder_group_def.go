// Code generated by rimworld-editor. DO NOT EDIT.

package historyautorecording

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type HistoryAutoRecorderGroupDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName                 string               `xml:"defName"`
	Label                   string               `xml:"label"`
	HistoryAutoRecorderDefs *types.Slice[string] `xml:"historyAutoRecorderDefs"`
	IntegersOnly            bool                 `xml:"integersOnly"`
	UseFixedScale           bool                 `xml:"useFixedScale"`
	FixedScale              string               `xml:"fixedScale"`
	OnlyPositiveValues      bool                 `xml:"onlyPositiveValues"`
	DevModeOnly             bool                 `xml:"devModeOnly"`
	GraphColor              string               `xml:"graphColor"`
	RecordTicksFrequency    int64                `xml:"recordTicksFrequency"`
	WorkerClass             string               `xml:"workerClass"`
	ValueFormat             string               `xml:"valueFormat"`
}

func (h *HistoryAutoRecorderGroupDef) Assign(*xml.Element) error {
	return nil
}

func (h *HistoryAutoRecorderGroupDef) CountValidatedField() int {
	if h.FieldValidated == nil {
		return 0
	}
	return len(h.FieldValidated)
}

func (h *HistoryAutoRecorderGroupDef) Equal(*HistoryAutoRecorderGroupDef) bool {
	return false
}

func (h *HistoryAutoRecorderGroupDef) GetAttributes() attributes.Attributes {
	return h.Attr
}

func (h *HistoryAutoRecorderGroupDef) GetPath() string {
	return ""
}

func (h *HistoryAutoRecorderGroupDef) Greater(*HistoryAutoRecorderGroupDef) bool {
	return false
}

func (h *HistoryAutoRecorderGroupDef) IsValidField(field string) bool {
	return h.FieldValidated[field]
}

func (h *HistoryAutoRecorderGroupDef) Less(*HistoryAutoRecorderGroupDef) bool {
	return false
}

func (h *HistoryAutoRecorderGroupDef) SetAttributes(attr attributes.Attributes) {
	h.Attr = attr
	return
}

func (h *HistoryAutoRecorderGroupDef) Val() *HistoryAutoRecorderGroupDef {
	return nil
}

func (h *HistoryAutoRecorderGroupDef) ValidateField(field string) {
	if h.FieldValidated == nil {
		h.FieldValidated = make(map[string]bool)
	}
	h.FieldValidated[field] = true
	return
}
