// Code generated by rimworld-editor. DO NOT EDIT.

package featuredefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type FeatureDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName                   string               `xml:"defName"`
	WorkerClass               string               `xml:"workerClass"`
	Order                     int64                `xml:"order"`
	MinSize                   int64                `xml:"minSize"`
	MaxSize                   int64                `xml:"maxSize"`
	NameMaker                 string               `xml:"nameMaker"`
	MinRootGroupSize          int64                `xml:"minRootGroupSize"`
	MaxRootGroupSize          int64                `xml:"maxRootGroupSize"`
	CanTouchWorldEdge         bool                 `xml:"canTouchWorldEdge"`
	RootBiomes                *types.Slice[string] `xml:"rootBiomes"`
	MaxPctOfWholeArea         float64              `xml:"maxPctOfWholeArea"`
	MaxPassageWidth           int64                `xml:"maxPassageWidth"`
	MinRootGroupsInCluster    int64                `xml:"minRootGroupsInCluster"`
	MaxSpaceBetweenRootGroups int64                `xml:"maxSpaceBetweenRootGroups"`
	AcceptableBiomes          *types.Slice[string] `xml:"acceptableBiomes"`
}

func (f *FeatureDef) Assign(*xml.Element) error {
	return nil
}

func (f *FeatureDef) CountValidatedField() int {
	if f.FieldValidated == nil {
		return 0
	}
	return len(f.FieldValidated)
}

func (f *FeatureDef) Equal(*FeatureDef) bool {
	return false
}

func (f *FeatureDef) GetAttributes() attributes.Attributes {
	return f.Attr
}

func (f *FeatureDef) GetPath() string {
	return ""
}

func (f *FeatureDef) Greater(*FeatureDef) bool {
	return false
}

func (f *FeatureDef) IsValidField(field string) bool {
	return f.FieldValidated[field]
}

func (f *FeatureDef) Less(*FeatureDef) bool {
	return false
}

func (f *FeatureDef) SetAttributes(attr attributes.Attributes) {
	f.Attr = attr
	return
}

func (f *FeatureDef) Val() *FeatureDef {
	return nil
}

func (f *FeatureDef) ValidateField(field string) {
	if f.FieldValidated == nil {
		f.FieldValidated = make(map[string]bool)
	}
	f.FieldValidated[field] = true
	return
}
