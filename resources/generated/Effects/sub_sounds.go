// Code generated by rimworld-editor. DO NOT EDIT.

package effects

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type SubSounds struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	MuteWhenPaused       bool                  `xml:"muteWhenPaused"`
	Grains               *types.Slice[*Grains] `xml:"grains"`
	VolumeRange          string                `xml:"volumeRange"`
	PitchRange           string                `xml:"pitchRange"`
	DistRange            string                `xml:"distRange"`
	SustainAttack        float64               `xml:"sustainAttack"`
	SustainIntervalRange float64               `xml:"sustainIntervalRange"`
}

func (s *SubSounds) Assign(*xml.Element) error {
	return nil
}

func (s *SubSounds) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *SubSounds) Equal(*SubSounds) bool {
	return false
}

func (s *SubSounds) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *SubSounds) GetPath() string {
	return ""
}

func (s *SubSounds) Greater(*SubSounds) bool {
	return false
}

func (s *SubSounds) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *SubSounds) Less(*SubSounds) bool {
	return false
}

func (s *SubSounds) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *SubSounds) Val() *SubSounds {
	return nil
}

func (s *SubSounds) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
