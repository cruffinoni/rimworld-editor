// Code generated by rimworld-editor. DO NOT EDIT.

package effects

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type Mote struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	FadeInTime                 float64 `xml:"fadeInTime"`
	SolidTime                  float64 `xml:"solidTime"`
	FadeOutTime                float64 `xml:"fadeOutTime"`
	Collide                    bool    `xml:"collide"`
	RotateTowardsMoveDirection bool    `xml:"rotateTowardsMoveDirection"`
	GrowthRate                 float64 `xml:"growthRate"`
	SpeedPerTime               float64 `xml:"speedPerTime"`
	RotateTowardsTarget        bool    `xml:"rotateTowardsTarget"`
	NeedsMaintenance           bool    `xml:"needsMaintenance"`
	UnattachedDrawOffset       string  `xml:"unattachedDrawOffset"`
	AttachedDrawOffset         string  `xml:"attachedDrawOffset"`
	FadeOutUnmaintained        bool    `xml:"fadeOutUnmaintained"`
	ScaleToConnectTargets      bool    `xml:"scaleToConnectTargets"`
	RealTime                   bool    `xml:"realTime"`
	Acceleration               string  `xml:"acceleration"`
}

func (m *Mote) Assign(*xml.Element) error {
	return nil
}

func (m *Mote) CountValidatedField() int {
	if m.FieldValidated == nil {
		return 0
	}
	return len(m.FieldValidated)
}

func (m *Mote) Equal(*Mote) bool {
	return false
}

func (m *Mote) GetAttributes() attributes.Attributes {
	return m.Attr
}

func (m *Mote) GetPath() string {
	return ""
}

func (m *Mote) Greater(*Mote) bool {
	return false
}

func (m *Mote) IsValidField(field string) bool {
	return m.FieldValidated[field]
}

func (m *Mote) Less(*Mote) bool {
	return false
}

func (m *Mote) SetAttributes(attr attributes.Attributes) {
	m.Attr = attr
	return
}

func (m *Mote) Val() *Mote {
	return nil
}

func (m *Mote) ValidateField(field string) {
	if m.FieldValidated == nil {
		m.FieldValidated = make(map[string]bool)
	}
	m.FieldValidated[field] = true
	return
}
