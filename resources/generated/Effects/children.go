// Code generated by rimworld-editor. DO NOT EDIT.

package effects

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type Children struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	SubEffecterClass          string                     `xml:"subEffecterClass"`
	MoteDef                   string                     `xml:"moteDef"`
	FleckDef                  string                     `xml:"fleckDef"`
	Speed                     float64                    `xml:"speed"`
	SoundDef                  string                     `xml:"soundDef"`
	BurstCount                string                     `xml:"burstCount"`
	PositionLerpFactor        float64                    `xml:"positionLerpFactor"`
	SpawnLocType              string                     `xml:"spawnLocType"`
	Scale                     string                     `xml:"scale"`
	TicksBetweenMotes         int64                      `xml:"ticksBetweenMotes"`
	FleckUsesAngleForVelocity bool                       `xml:"fleckUsesAngleForVelocity"`
	PositionRadius            float64                    `xml:"positionRadius"`
	Angle                     string                     `xml:"angle"`
	ChancePerTick             float64                    `xml:"chancePerTick"`
	TicksBeforeSustainerStart int64                      `xml:"ticksBeforeSustainerStart"`
	AirTime                   string                     `xml:"airTime"`
	RotationRate              string                     `xml:"rotationRate"`
	AbsoluteAngle             bool                       `xml:"absoluteAngle"`
	Color                     string                     `xml:"color"`
	PositionOffset            string                     `xml:"positionOffset"`
	IntermittentSoundInterval *IntermittentSoundInterval `xml:"intermittentSoundInterval"`
	AttachToSpawnThing        bool                       `xml:"attachToSpawnThing"`
	Rotation                  string                     `xml:"rotation"`
	InitialDelayTicks         int64                      `xml:"initialDelayTicks"`
	UseTargetBinitialRotation bool                       `xml:"useTargetBInitialRotation"`
	UseTargetAinitialRotation bool                       `xml:"useTargetAInitialRotation"`
	MaxMoteCount              int64                      `xml:"maxMoteCount"`
}

func (c *Children) Assign(*xml.Element) error {
	return nil
}

func (c *Children) CountValidatedField() int {
	if c.FieldValidated == nil {
		return 0
	}
	return len(c.FieldValidated)
}

func (c *Children) Equal(*Children) bool {
	return false
}

func (c *Children) GetAttributes() attributes.Attributes {
	return c.Attr
}

func (c *Children) GetPath() string {
	return ""
}

func (c *Children) Greater(*Children) bool {
	return false
}

func (c *Children) IsValidField(field string) bool {
	return c.FieldValidated[field]
}

func (c *Children) Less(*Children) bool {
	return false
}

func (c *Children) SetAttributes(attr attributes.Attributes) {
	c.Attr = attr
	return
}

func (c *Children) Val() *Children {
	return nil
}

func (c *Children) ValidateField(field string) {
	if c.FieldValidated == nil {
		c.FieldValidated = make(map[string]bool)
	}
	c.FieldValidated[field] = true
	return
}
