// Code generated by rimworld-editor. DO NOT EDIT.

package effects

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type EffecterDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName                string                        `xml:"defName"`
	Children               *types.Slice[*Children]       `xml:"children"`
	Sustain                bool                          `xml:"sustain"`
	Context                string                        `xml:"context"`
	MaxSimultaneous        int64                         `xml:"maxSimultaneous"`
	PriorityMode           string                        `xml:"priorityMode"`
	SubSounds              *types.Slice[*SubSounds]      `xml:"subSounds"`
	LandSound              string                        `xml:"landSound"`
	FleckSystemClass       string                        `xml:"fleckSystemClass"`
	FadeInTime             float64                       `xml:"fadeInTime"`
	FadeOutTime            float64                       `xml:"fadeOutTime"`
	GraphicData            *GraphicData                  `xml:"graphicData"`
	AltitudeLayer          string                        `xml:"altitudeLayer"`
	SolidTime              float64                       `xml:"solidTime"`
	ThingClass             string                        `xml:"thingClass"`
	Mote                   *Mote                         `xml:"mote"`
	PositionRadius         float64                       `xml:"positionRadius"`
	OffsetTowardsTarget    string                        `xml:"offsetTowardsTarget"`
	Acceleration           string                        `xml:"acceleration"`
	GrowthRate             float64                       `xml:"growthRate"`
	SpeedPerTime           int64                         `xml:"speedPerTime"`
	RandomGraphics         *types.Slice[*RandomGraphics] `xml:"randomGraphics"`
	RealTime               bool                          `xml:"realTime"`
	DrawOffscreen          bool                          `xml:"drawOffscreen"`
	AltitudeLayerIncOffset float64                       `xml:"altitudeLayerIncOffset"`
	Label                  string                        `xml:"label"`
	Category               string                        `xml:"category"`
	UseHitPoints           bool                          `xml:"useHitPoints"`
	TickerType             string                        `xml:"tickerType"`
	IsSaveable             bool                          `xml:"isSaveable"`
	Rotatable              bool                          `xml:"rotatable"`
	DrawGuioverlay         bool                          `xml:"drawGUIOverlay"`
}

func (e *EffecterDef) Assign(*xml.Element) error {
	return nil
}

func (e *EffecterDef) CountValidatedField() int {
	if e.FieldValidated == nil {
		return 0
	}
	return len(e.FieldValidated)
}

func (e *EffecterDef) Equal(*EffecterDef) bool {
	return false
}

func (e *EffecterDef) GetAttributes() attributes.Attributes {
	return e.Attr
}

func (e *EffecterDef) GetPath() string {
	return ""
}

func (e *EffecterDef) Greater(*EffecterDef) bool {
	return false
}

func (e *EffecterDef) IsValidField(field string) bool {
	return e.FieldValidated[field]
}

func (e *EffecterDef) Less(*EffecterDef) bool {
	return false
}

func (e *EffecterDef) SetAttributes(attr attributes.Attributes) {
	e.Attr = attr
	return
}

func (e *EffecterDef) Val() *EffecterDef {
	return nil
}

func (e *EffecterDef) ValidateField(field string) {
	if e.FieldValidated == nil {
		e.FieldValidated = make(map[string]bool)
	}
	e.FieldValidated[field] = true
	return
}
