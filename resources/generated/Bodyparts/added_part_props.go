// Code generated by rimworld-editor. DO NOT EDIT.

package bodyparts

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type AddedPartProps struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Solid             bool    `xml:"solid"`
	PartEfficiency    float64 `xml:"partEfficiency"`
	BetterThanNatural bool    `xml:"betterThanNatural"`
	IsGoodWeapon      bool    `xml:"isGoodWeapon"`
}

func (a *AddedPartProps) Assign(*xml.Element) error {
	return nil
}

func (a *AddedPartProps) CountValidatedField() int {
	if a.FieldValidated == nil {
		return 0
	}
	return len(a.FieldValidated)
}

func (a *AddedPartProps) Equal(*AddedPartProps) bool {
	return false
}

func (a *AddedPartProps) GetAttributes() attributes.Attributes {
	return a.Attr
}

func (a *AddedPartProps) GetPath() string {
	return ""
}

func (a *AddedPartProps) Greater(*AddedPartProps) bool {
	return false
}

func (a *AddedPartProps) IsValidField(field string) bool {
	return a.FieldValidated[field]
}

func (a *AddedPartProps) Less(*AddedPartProps) bool {
	return false
}

func (a *AddedPartProps) SetAttributes(attr attributes.Attributes) {
	a.Attr = attr
	return
}

func (a *AddedPartProps) Val() *AddedPartProps {
	return nil
}

func (a *AddedPartProps) ValidateField(field string) {
	if a.FieldValidated == nil {
		a.FieldValidated = make(map[string]bool)
	}
	a.FieldValidated[field] = true
	return
}
