// Code generated by rimworld-editor. DO NOT EDIT.

package bodyparts

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type FixedIngredientFilter struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	ThingDefs  *types.Slice[string] `xml:"thingDefs"`
	Categories *types.Slice[string] `xml:"categories"`
}

func (f *FixedIngredientFilter) Assign(*xml.Element) error {
	return nil
}

func (f *FixedIngredientFilter) CountValidatedField() int {
	if f.FieldValidated == nil {
		return 0
	}
	return len(f.FieldValidated)
}

func (f *FixedIngredientFilter) Equal(*FixedIngredientFilter) bool {
	return false
}

func (f *FixedIngredientFilter) GetAttributes() attributes.Attributes {
	return f.Attr
}

func (f *FixedIngredientFilter) GetPath() string {
	return ""
}

func (f *FixedIngredientFilter) Greater(*FixedIngredientFilter) bool {
	return false
}

func (f *FixedIngredientFilter) IsValidField(field string) bool {
	return f.FieldValidated[field]
}

func (f *FixedIngredientFilter) Less(*FixedIngredientFilter) bool {
	return false
}

func (f *FixedIngredientFilter) SetAttributes(attr attributes.Attributes) {
	f.Attr = attr
	return
}

func (f *FixedIngredientFilter) Val() *FixedIngredientFilter {
	return nil
}

func (f *FixedIngredientFilter) ValidateField(field string) {
	if f.FieldValidated == nil {
		f.FieldValidated = make(map[string]bool)
	}
	f.FieldValidated[field] = true
	return
}
