// Code generated by rimworld-editor. DO NOT EDIT.

package bodyparts

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type StatBases struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DeteriorationRate float64 `xml:"DeteriorationRate"`
	MarketValue       int64   `xml:"MarketValue"`
	Mass              float64 `xml:"Mass"`
	MaxHitPoints      int64   `xml:"MaxHitPoints"`
	Flammability      float64 `xml:"Flammability"`
	Beauty            int64   `xml:"Beauty"`
	WorkToMake        int64   `xml:"WorkToMake"`
}

func (s *StatBases) Assign(*xml.Element) error {
	return nil
}

func (s *StatBases) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *StatBases) Equal(*StatBases) bool {
	return false
}

func (s *StatBases) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *StatBases) GetPath() string {
	return ""
}

func (s *StatBases) Greater(*StatBases) bool {
	return false
}

func (s *StatBases) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *StatBases) Less(*StatBases) bool {
	return false
}

func (s *StatBases) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *StatBases) Val() *StatBases {
	return nil
}

func (s *StatBases) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
