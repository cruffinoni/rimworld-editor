// Code generated by rimworld-editor. DO NOT EDIT.

package factiondefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type RaidCommonalityFromPointsCurve struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Points *types.Slice[string] `xml:"points"`
}

func (r *RaidCommonalityFromPointsCurve) Assign(*xml.Element) error {
	return nil
}

func (r *RaidCommonalityFromPointsCurve) CountValidatedField() int {
	if r.FieldValidated == nil {
		return 0
	}
	return len(r.FieldValidated)
}

func (r *RaidCommonalityFromPointsCurve) Equal(*RaidCommonalityFromPointsCurve) bool {
	return false
}

func (r *RaidCommonalityFromPointsCurve) GetAttributes() attributes.Attributes {
	return r.Attr
}

func (r *RaidCommonalityFromPointsCurve) GetPath() string {
	return ""
}

func (r *RaidCommonalityFromPointsCurve) Greater(*RaidCommonalityFromPointsCurve) bool {
	return false
}

func (r *RaidCommonalityFromPointsCurve) IsValidField(field string) bool {
	return r.FieldValidated[field]
}

func (r *RaidCommonalityFromPointsCurve) Less(*RaidCommonalityFromPointsCurve) bool {
	return false
}

func (r *RaidCommonalityFromPointsCurve) SetAttributes(attr attributes.Attributes) {
	r.Attr = attr
	return
}

func (r *RaidCommonalityFromPointsCurve) Val() *RaidCommonalityFromPointsCurve {
	return nil
}

func (r *RaidCommonalityFromPointsCurve) ValidateField(field string) {
	if r.FieldValidated == nil {
		r.FieldValidated = make(map[string]bool)
	}
	r.FieldValidated[field] = true
	return
}
