// Code generated by rimworld-editor. DO NOT EDIT.

package factiondefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type MaxPawnCostPerTotalPointsCurve struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Points *types.Slice[string] `xml:"points"`
}

func (m *MaxPawnCostPerTotalPointsCurve) Assign(*xml.Element) error {
	return nil
}

func (m *MaxPawnCostPerTotalPointsCurve) CountValidatedField() int {
	if m.FieldValidated == nil {
		return 0
	}
	return len(m.FieldValidated)
}

func (m *MaxPawnCostPerTotalPointsCurve) Equal(*MaxPawnCostPerTotalPointsCurve) bool {
	return false
}

func (m *MaxPawnCostPerTotalPointsCurve) GetAttributes() attributes.Attributes {
	return m.Attr
}

func (m *MaxPawnCostPerTotalPointsCurve) GetPath() string {
	return ""
}

func (m *MaxPawnCostPerTotalPointsCurve) Greater(*MaxPawnCostPerTotalPointsCurve) bool {
	return false
}

func (m *MaxPawnCostPerTotalPointsCurve) IsValidField(field string) bool {
	return m.FieldValidated[field]
}

func (m *MaxPawnCostPerTotalPointsCurve) Less(*MaxPawnCostPerTotalPointsCurve) bool {
	return false
}

func (m *MaxPawnCostPerTotalPointsCurve) SetAttributes(attr attributes.Attributes) {
	m.Attr = attr
	return
}

func (m *MaxPawnCostPerTotalPointsCurve) Val() *MaxPawnCostPerTotalPointsCurve {
	return nil
}

func (m *MaxPawnCostPerTotalPointsCurve) ValidateField(field string) {
	if m.FieldValidated == nil {
		m.FieldValidated = make(map[string]bool)
	}
	m.FieldValidated[field] = true
	return
}
