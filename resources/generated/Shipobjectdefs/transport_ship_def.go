// Code generated by rimworld-editor. DO NOT EDIT.

package shipobjectdefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type TransportShipDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName           string `xml:"defName"`
	Label             string `xml:"label"`
	ShipThing         string `xml:"shipThing"`
	ArrivingSkyfaller string `xml:"arrivingSkyfaller"`
	LeavingSkyfaller  string `xml:"leavingSkyfaller"`
	WorldObject       string `xml:"worldObject"`
	MaxLaunchDistance int64  `xml:"maxLaunchDistance"`
}

func (t *TransportShipDef) Assign(*xml.Element) error {
	return nil
}

func (t *TransportShipDef) CountValidatedField() int {
	if t.FieldValidated == nil {
		return 0
	}
	return len(t.FieldValidated)
}

func (t *TransportShipDef) Equal(*TransportShipDef) bool {
	return false
}

func (t *TransportShipDef) GetAttributes() attributes.Attributes {
	return t.Attr
}

func (t *TransportShipDef) GetPath() string {
	return ""
}

func (t *TransportShipDef) Greater(*TransportShipDef) bool {
	return false
}

func (t *TransportShipDef) IsValidField(field string) bool {
	return t.FieldValidated[field]
}

func (t *TransportShipDef) Less(*TransportShipDef) bool {
	return false
}

func (t *TransportShipDef) SetAttributes(attr attributes.Attributes) {
	t.Attr = attr
	return
}

func (t *TransportShipDef) Val() *TransportShipDef {
	return nil
}

func (t *TransportShipDef) ValidateField(field string) {
	if t.FieldValidated == nil {
		t.FieldValidated = make(map[string]bool)
	}
	t.FieldValidated[field] = true
	return
}
