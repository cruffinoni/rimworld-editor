// Code generated by rimworld-editor. DO NOT EDIT.

package thingsetmakerdefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type Filter struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	ThingSetMakerTagsToAllow    *types.Slice[string] `xml:"thingSetMakerTagsToAllow"`
	DisallowCheaperThan         int64                `xml:"disallowCheaperThan"`
	ThingSetMakerTagsToDisallow *types.Slice[string] `xml:"thingSetMakerTagsToDisallow"`
	Categories                  *types.Slice[string] `xml:"categories"`
	ThingDefs                   *types.Slice[string] `xml:"thingDefs"`
	TradeTagsToAllow            *types.Slice[string] `xml:"tradeTagsToAllow"`
	DisallowedThingDefs         *types.Slice[string] `xml:"disallowedThingDefs"`
	DisallowWorsePreferability  string               `xml:"disallowWorsePreferability"`
	DisallowWithComp            string               `xml:"disallowWithComp"`
	DisallowInedibleByHuman     bool                 `xml:"disallowInedibleByHuman"`
}

func (f *Filter) Assign(*xml.Element) error {
	return nil
}

func (f *Filter) CountValidatedField() int {
	if f.FieldValidated == nil {
		return 0
	}
	return len(f.FieldValidated)
}

func (f *Filter) Equal(*Filter) bool {
	return false
}

func (f *Filter) GetAttributes() attributes.Attributes {
	return f.Attr
}

func (f *Filter) GetPath() string {
	return ""
}

func (f *Filter) Greater(*Filter) bool {
	return false
}

func (f *Filter) IsValidField(field string) bool {
	return f.FieldValidated[field]
}

func (f *Filter) Less(*Filter) bool {
	return false
}

func (f *Filter) SetAttributes(attr attributes.Attributes) {
	f.Attr = attr
	return
}

func (f *Filter) Val() *Filter {
	return nil
}

func (f *Filter) ValidateField(field string) {
	if f.FieldValidated == nil {
		f.FieldValidated = make(map[string]bool)
	}
	f.FieldValidated[field] = true
	return
}
