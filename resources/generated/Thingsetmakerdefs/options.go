// Code generated by rimworld-editor. DO NOT EDIT.

package thingsetmakerdefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types/embedded"
)

type Options struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Weight                            float64                `xml:"weight"`
	ThingSetMaker                     *ThingSetMaker         `xml:"thingSetMaker"`
	WeightIfPlayerHasNoItem           int64                  `xml:"weightIfPlayerHasNoItem"`
	WeightIfPlayerHasNoItemItem       string                 `xml:"weightIfPlayerHasNoItemItem"`
	WeightIfPlayerHasXenotype         int64                  `xml:"weightIfPlayerHasXenotype"`
	WeightIfPlayerHasXenotypeXenotype *embedded.Type[string] `xml:"weightIfPlayerHasXenotypeXenotype"`
	MaxMarketValue                    int64                  `xml:"maxMarketValue"`
	MinMarketValue                    int64                  `xml:"minMarketValue"`
	MinTotalMarketValue               int64                  `xml:"minTotalMarketValue"`
	Chance                            float64                `xml:"chance"`
}

func (o *Options) Assign(*xml.Element) error {
	return nil
}

func (o *Options) CountValidatedField() int {
	if o.FieldValidated == nil {
		return 0
	}
	return len(o.FieldValidated)
}

func (o *Options) Equal(*Options) bool {
	return false
}

func (o *Options) GetAttributes() attributes.Attributes {
	return o.Attr
}

func (o *Options) GetPath() string {
	return ""
}

func (o *Options) Greater(*Options) bool {
	return false
}

func (o *Options) IsValidField(field string) bool {
	return o.FieldValidated[field]
}

func (o *Options) Less(*Options) bool {
	return false
}

func (o *Options) SetAttributes(attr attributes.Attributes) {
	o.Attr = attr
	return
}

func (o *Options) Val() *Options {
	return nil
}

func (o *Options) ValidateField(field string) {
	if o.FieldValidated == nil {
		o.FieldValidated = make(map[string]bool)
	}
	o.FieldValidated[field] = true
	return
}
