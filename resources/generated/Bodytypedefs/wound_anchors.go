// Code generated by rimworld-editor. DO NOT EDIT.

package bodytypedefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type WoundAnchors struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Rotation    string  `xml:"rotation"`
	Group       string  `xml:"group"`
	Offset      string  `xml:"offset"`
	Range       float64 `xml:"range"`
	DebugColor  string  `xml:"debugColor"`
	Tag         string  `xml:"tag"`
	Layer       string  `xml:"layer"`
	CanMirror   bool    `xml:"canMirror"`
	NarrowCrown bool    `xml:"narrowCrown"`
}

func (w *WoundAnchors) Assign(*xml.Element) error {
	return nil
}

func (w *WoundAnchors) CountValidatedField() int {
	if w.FieldValidated == nil {
		return 0
	}
	return len(w.FieldValidated)
}

func (w *WoundAnchors) Equal(*WoundAnchors) bool {
	return false
}

func (w *WoundAnchors) GetAttributes() attributes.Attributes {
	return w.Attr
}

func (w *WoundAnchors) GetPath() string {
	return ""
}

func (w *WoundAnchors) Greater(*WoundAnchors) bool {
	return false
}

func (w *WoundAnchors) IsValidField(field string) bool {
	return w.FieldValidated[field]
}

func (w *WoundAnchors) Less(*WoundAnchors) bool {
	return false
}

func (w *WoundAnchors) SetAttributes(attr attributes.Attributes) {
	w.Attr = attr
	return
}

func (w *WoundAnchors) Val() *WoundAnchors {
	return nil
}

func (w *WoundAnchors) ValidateField(field string) {
	if w.FieldValidated == nil {
		w.FieldValidated = make(map[string]bool)
	}
	w.FieldValidated[field] = true
	return
}
