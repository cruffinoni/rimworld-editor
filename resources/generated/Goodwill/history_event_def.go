// Code generated by rimworld-editor. DO NOT EDIT.

package goodwill

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type HistoryEventDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName                                string `xml:"defName"`
	Label                                  string `xml:"label"`
	WorkerClass                            string `xml:"workerClass"`
	NaturalGoodwillOffset                  int64  `xml:"naturalGoodwillOffset"`
	IgnoreIllegalLabelCharacterConfigError bool   `xml:"ignoreIllegalLabelCharacterConfigError"`
	Meme                                   string `xml:"meme"`
	OtherMeme                              string `xml:"otherMeme"`
	VersusAll                              bool   `xml:"versusAll"`
}

func (h *HistoryEventDef) Assign(*xml.Element) error {
	return nil
}

func (h *HistoryEventDef) CountValidatedField() int {
	if h.FieldValidated == nil {
		return 0
	}
	return len(h.FieldValidated)
}

func (h *HistoryEventDef) Equal(*HistoryEventDef) bool {
	return false
}

func (h *HistoryEventDef) GetAttributes() attributes.Attributes {
	return h.Attr
}

func (h *HistoryEventDef) GetPath() string {
	return ""
}

func (h *HistoryEventDef) Greater(*HistoryEventDef) bool {
	return false
}

func (h *HistoryEventDef) IsValidField(field string) bool {
	return h.FieldValidated[field]
}

func (h *HistoryEventDef) Less(*HistoryEventDef) bool {
	return false
}

func (h *HistoryEventDef) SetAttributes(attr attributes.Attributes) {
	h.Attr = attr
	return
}

func (h *HistoryEventDef) Val() *HistoryEventDef {
	return nil
}

func (h *HistoryEventDef) ValidateField(field string) {
	if h.FieldValidated == nil {
		h.FieldValidated = make(map[string]bool)
	}
	h.FieldValidated[field] = true
	return
}
