// Code generated by rimworld-editor. DO NOT EDIT.

package lifestagedefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type HairStyleFilter struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Whitelist bool                 `xml:"whitelist"`
	Tags      *types.Slice[string] `xml:"tags"`
}

func (h *HairStyleFilter) Assign(*xml.Element) error {
	return nil
}

func (h *HairStyleFilter) CountValidatedField() int {
	if h.FieldValidated == nil {
		return 0
	}
	return len(h.FieldValidated)
}

func (h *HairStyleFilter) Equal(*HairStyleFilter) bool {
	return false
}

func (h *HairStyleFilter) GetAttributes() attributes.Attributes {
	return h.Attr
}

func (h *HairStyleFilter) GetPath() string {
	return ""
}

func (h *HairStyleFilter) Greater(*HairStyleFilter) bool {
	return false
}

func (h *HairStyleFilter) IsValidField(field string) bool {
	return h.FieldValidated[field]
}

func (h *HairStyleFilter) Less(*HairStyleFilter) bool {
	return false
}

func (h *HairStyleFilter) SetAttributes(attr attributes.Attributes) {
	h.Attr = attr
	return
}

func (h *HairStyleFilter) Val() *HairStyleFilter {
	return nil
}

func (h *HairStyleFilter) ValidateField(field string) {
	if h.FieldValidated == nil {
		h.FieldValidated = make(map[string]bool)
	}
	h.FieldValidated[field] = true
	return
}
