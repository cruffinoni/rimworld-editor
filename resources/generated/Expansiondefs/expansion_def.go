// Code generated by rimworld-editor. DO NOT EDIT.

package expansiondefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type ExpansionDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName                 string `xml:"defName"`
	Label                   string `xml:"label"`
	Description             string `xml:"description"`
	LinkedMod               string `xml:"linkedMod"`
	IconPath                string `xml:"iconPath"`
	BackgroundPath          string `xml:"backgroundPath"`
	IsCore                  bool   `xml:"isCore"`
	SteamUrl                string `xml:"steamUrl"`
	SiteUrl                 string `xml:"siteUrl"`
	NotOwnedIconPath        string `xml:"notOwnedIconPath"`
	PreviewImagesFolderPath string `xml:"previewImagesFolderPath"`
	PrimaryColor            string `xml:"primaryColor"`
}

func (e *ExpansionDef) Assign(*xml.Element) error {
	return nil
}

func (e *ExpansionDef) CountValidatedField() int {
	if e.FieldValidated == nil {
		return 0
	}
	return len(e.FieldValidated)
}

func (e *ExpansionDef) Equal(*ExpansionDef) bool {
	return false
}

func (e *ExpansionDef) GetAttributes() attributes.Attributes {
	return e.Attr
}

func (e *ExpansionDef) GetPath() string {
	return ""
}

func (e *ExpansionDef) Greater(*ExpansionDef) bool {
	return false
}

func (e *ExpansionDef) IsValidField(field string) bool {
	return e.FieldValidated[field]
}

func (e *ExpansionDef) Less(*ExpansionDef) bool {
	return false
}

func (e *ExpansionDef) SetAttributes(attr attributes.Attributes) {
	e.Attr = attr
	return
}

func (e *ExpansionDef) Val() *ExpansionDef {
	return nil
}

func (e *ExpansionDef) ValidateField(field string) {
	if e.FieldValidated == nil {
		e.FieldValidated = make(map[string]bool)
	}
	e.FieldValidated[field] = true
	return
}
