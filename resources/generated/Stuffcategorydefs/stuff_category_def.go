// Code generated by rimworld-editor. DO NOT EDIT.

package stuffcategorydefs

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type StuffCategoryDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName            string `xml:"defName"`
	Label              string `xml:"label"`
	Noun               string `xml:"noun"`
	DestroySoundSmall  string `xml:"destroySoundSmall"`
	DestroySoundMedium string `xml:"destroySoundMedium"`
	DestroySoundLarge  string `xml:"destroySoundLarge"`
}

func (s *StuffCategoryDef) Assign(*xml.Element) error {
	return nil
}

func (s *StuffCategoryDef) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *StuffCategoryDef) Equal(*StuffCategoryDef) bool {
	return false
}

func (s *StuffCategoryDef) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *StuffCategoryDef) GetPath() string {
	return ""
}

func (s *StuffCategoryDef) Greater(*StuffCategoryDef) bool {
	return false
}

func (s *StuffCategoryDef) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *StuffCategoryDef) Less(*StuffCategoryDef) bool {
	return false
}

func (s *StuffCategoryDef) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *StuffCategoryDef) Val() *StuffCategoryDef {
	return nil
}

func (s *StuffCategoryDef) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
