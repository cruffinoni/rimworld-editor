// Code generated by rimworld-editor. DO NOT EDIT.

package weapons

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type WornGraphicData struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	RenderUtilityAsPack bool    `xml:"renderUtilityAsPack"`
	North               *North  `xml:"north"`
	South               *South  `xml:"south"`
	East                *East   `xml:"east"`
	Male                *Male   `xml:"male"`
	Female              *Female `xml:"female"`
	Thin                *Thin   `xml:"thin"`
	Hulk                *Hulk   `xml:"hulk"`
	Fat                 *Fat    `xml:"fat"`
}

func (w *WornGraphicData) Assign(*xml.Element) error {
	return nil
}

func (w *WornGraphicData) CountValidatedField() int {
	if w.FieldValidated == nil {
		return 0
	}
	return len(w.FieldValidated)
}

func (w *WornGraphicData) Equal(*WornGraphicData) bool {
	return false
}

func (w *WornGraphicData) GetAttributes() attributes.Attributes {
	return w.Attr
}

func (w *WornGraphicData) GetPath() string {
	return ""
}

func (w *WornGraphicData) Greater(*WornGraphicData) bool {
	return false
}

func (w *WornGraphicData) IsValidField(field string) bool {
	return w.FieldValidated[field]
}

func (w *WornGraphicData) Less(*WornGraphicData) bool {
	return false
}

func (w *WornGraphicData) SetAttributes(attr attributes.Attributes) {
	w.Attr = attr
	return
}

func (w *WornGraphicData) Val() *WornGraphicData {
	return nil
}

func (w *WornGraphicData) ValidateField(field string) {
	if w.FieldValidated == nil {
		w.FieldValidated = make(map[string]bool)
	}
	w.FieldValidated[field] = true
	return
}
