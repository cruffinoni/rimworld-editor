// Code generated by rimworld-editor. DO NOT EDIT.

package weapons

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
)

type StatBases struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	WorkToMake            int64   `xml:"WorkToMake"`
	Mass                  float64 `xml:"Mass"`
	AccuracyTouch         float64 `xml:"AccuracyTouch"`
	AccuracyShort         float64 `xml:"AccuracyShort"`
	AccuracyMedium        float64 `xml:"AccuracyMedium"`
	AccuracyLong          float64 `xml:"AccuracyLong"`
	RangedWeapon_Cooldown float64 `xml:"RangedWeapon_Cooldown"`
	MarketValue           int64   `xml:"MarketValue"`
	MaxHitPoints          int64   `xml:"MaxHitPoints"`
	Beauty                int64   `xml:"Beauty"`
	DeteriorationRate     int64   `xml:"DeteriorationRate"`
	Flammability          float64 `xml:"Flammability"`
	SellPriceFactor       float64 `xml:"SellPriceFactor"`
}

func (s *StatBases) Assign(*xml.Element) error {
	return nil
}

func (s *StatBases) CountValidatedField() int {
	if s.FieldValidated == nil {
		return 0
	}
	return len(s.FieldValidated)
}

func (s *StatBases) Equal(*StatBases) bool {
	return false
}

func (s *StatBases) GetAttributes() attributes.Attributes {
	return s.Attr
}

func (s *StatBases) GetPath() string {
	return ""
}

func (s *StatBases) Greater(*StatBases) bool {
	return false
}

func (s *StatBases) IsValidField(field string) bool {
	return s.FieldValidated[field]
}

func (s *StatBases) Less(*StatBases) bool {
	return false
}

func (s *StatBases) SetAttributes(attr attributes.Attributes) {
	s.Attr = attr
	return
}

func (s *StatBases) Val() *StatBases {
	return nil
}

func (s *StatBases) ValidateField(field string) {
	if s.FieldValidated == nil {
		s.FieldValidated = make(map[string]bool)
	}
	s.FieldValidated[field] = true
	return
}
