// Code generated by rimworld-editor. DO NOT EDIT.

package weapons

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type Apparel struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	WornGraphicPath           string               `xml:"wornGraphicPath"`
	WornGraphicData           *WornGraphicData     `xml:"wornGraphicData"`
	CountsAsClothingForNudity bool                 `xml:"countsAsClothingForNudity"`
	CareIfDamaged             bool                 `xml:"careIfDamaged"`
	WearPerDay                int64                `xml:"wearPerDay"`
	AiPickUpOpportunistically bool                 `xml:"ai_pickUpOpportunistically"`
	Layers                    *types.Slice[string] `xml:"layers"`
	ScoreOffset               int64                `xml:"scoreOffset"`
	CareIfWornByCorpse        bool                 `xml:"careIfWornByCorpse"`
	IgnoredByNonViolent       bool                 `xml:"ignoredByNonViolent"`
	BodyPartGroups            *types.Slice[string] `xml:"bodyPartGroups"`
}

func (a *Apparel) Assign(*xml.Element) error {
	return nil
}

func (a *Apparel) CountValidatedField() int {
	if a.FieldValidated == nil {
		return 0
	}
	return len(a.FieldValidated)
}

func (a *Apparel) Equal(*Apparel) bool {
	return false
}

func (a *Apparel) GetAttributes() attributes.Attributes {
	return a.Attr
}

func (a *Apparel) GetPath() string {
	return ""
}

func (a *Apparel) Greater(*Apparel) bool {
	return false
}

func (a *Apparel) IsValidField(field string) bool {
	return a.FieldValidated[field]
}

func (a *Apparel) Less(*Apparel) bool {
	return false
}

func (a *Apparel) SetAttributes(attr attributes.Attributes) {
	a.Attr = attr
	return
}

func (a *Apparel) Val() *Apparel {
	return nil
}

func (a *Apparel) ValidateField(field string) {
	if a.FieldValidated == nil {
		a.FieldValidated = make(map[string]bool)
	}
	a.FieldValidated[field] = true
	return
}
