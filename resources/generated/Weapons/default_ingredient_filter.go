// Code generated by rimworld-editor. DO NOT EDIT.

package weapons

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type DefaultIngredientFilter struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Categories          *types.Slice[string] `xml:"categories"`
	DisallowedThingDefs *types.Slice[string] `xml:"disallowedThingDefs"`
}

func (d *DefaultIngredientFilter) Assign(*xml.Element) error {
	return nil
}

func (d *DefaultIngredientFilter) CountValidatedField() int {
	if d.FieldValidated == nil {
		return 0
	}
	return len(d.FieldValidated)
}

func (d *DefaultIngredientFilter) Equal(*DefaultIngredientFilter) bool {
	return false
}

func (d *DefaultIngredientFilter) GetAttributes() attributes.Attributes {
	return d.Attr
}

func (d *DefaultIngredientFilter) GetPath() string {
	return ""
}

func (d *DefaultIngredientFilter) Greater(*DefaultIngredientFilter) bool {
	return false
}

func (d *DefaultIngredientFilter) IsValidField(field string) bool {
	return d.FieldValidated[field]
}

func (d *DefaultIngredientFilter) Less(*DefaultIngredientFilter) bool {
	return false
}

func (d *DefaultIngredientFilter) SetAttributes(attr attributes.Attributes) {
	d.Attr = attr
	return
}

func (d *DefaultIngredientFilter) Val() *DefaultIngredientFilter {
	return nil
}

func (d *DefaultIngredientFilter) ValidateField(field string) {
	if d.FieldValidated == nil {
		d.FieldValidated = make(map[string]bool)
	}
	d.FieldValidated[field] = true
	return
}
