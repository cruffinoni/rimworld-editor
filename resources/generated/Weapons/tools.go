// Code generated by rimworld-editor. DO NOT EDIT.

package weapons

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
	"github.com/cruffinoni/rimworld-editor/xml/types/primary"
)

type Tools struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Label                       string                           `xml:"label"`
	Capacities                  *types.Slice[string]             `xml:"capacities"`
	Power                       float64                          `xml:"power"`
	CooldownTime                float64                          `xml:"cooldownTime"`
	LabelUsedInLogging          bool                             `xml:"labelUsedInLogging"`
	ArmorPenetration            float64                          `xml:"armorPenetration"`
	TexPath                     string                           `xml:"texPath"`
	GraphicClass                string                           `xml:"graphicClass"`
	ExtraMeleeDamages           *types.Slice[*ExtraMeleeDamages] `xml:"extraMeleeDamages"`
	RequiredDamageTypeToExplode string                           `xml:"requiredDamageTypeToExplode"`
	Li                          *types.Slice[*primary.Empty]     `xml:"li"`
	ExplosiveDamageType         string                           `xml:"explosiveDamageType"`
	ExplosiveRadius             float64                          `xml:"explosiveRadius"`
}

func (t *Tools) Assign(*xml.Element) error {
	return nil
}

func (t *Tools) CountValidatedField() int {
	if t.FieldValidated == nil {
		return 0
	}
	return len(t.FieldValidated)
}

func (t *Tools) Equal(*Tools) bool {
	return false
}

func (t *Tools) GetAttributes() attributes.Attributes {
	return t.Attr
}

func (t *Tools) GetPath() string {
	return ""
}

func (t *Tools) Greater(*Tools) bool {
	return false
}

func (t *Tools) IsValidField(field string) bool {
	return t.FieldValidated[field]
}

func (t *Tools) Less(*Tools) bool {
	return false
}

func (t *Tools) SetAttributes(attr attributes.Attributes) {
	t.Attr = attr
	return
}

func (t *Tools) Val() *Tools {
	return nil
}

func (t *Tools) ValidateField(field string) {
	if t.FieldValidated == nil {
		t.FieldValidated = make(map[string]bool)
	}
	t.FieldValidated[field] = true
	return
}
