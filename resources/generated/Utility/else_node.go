// Code generated by rimworld-editor. DO NOT EDIT.

package utility

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type ElseNode struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Name   string               `xml:"name"`
	Value  float64              `xml:"value"`
	Nodes  *types.Slice[*Nodes] `xml:"nodes"`
	Chance float64              `xml:"chance"`
	Node   *Node                `xml:"node"`
}

func (e *ElseNode) Assign(*xml.Element) error {
	return nil
}

func (e *ElseNode) CountValidatedField() int {
	if e.FieldValidated == nil {
		return 0
	}
	return len(e.FieldValidated)
}

func (e *ElseNode) Equal(*ElseNode) bool {
	return false
}

func (e *ElseNode) GetAttributes() attributes.Attributes {
	return e.Attr
}

func (e *ElseNode) GetPath() string {
	return ""
}

func (e *ElseNode) Greater(*ElseNode) bool {
	return false
}

func (e *ElseNode) IsValidField(field string) bool {
	return e.FieldValidated[field]
}

func (e *ElseNode) Less(*ElseNode) bool {
	return false
}

func (e *ElseNode) SetAttributes(attr attributes.Attributes) {
	e.Attr = attr
	return
}

func (e *ElseNode) Val() *ElseNode {
	return nil
}

func (e *ElseNode) ValidateField(field string) {
	if e.FieldValidated == nil {
		e.FieldValidated = make(map[string]bool)
	}
	e.FieldValidated[field] = true
	return
}
