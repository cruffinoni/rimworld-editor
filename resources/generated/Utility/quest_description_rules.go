// Code generated by rimworld-editor. DO NOT EDIT.

package utility

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types"
)

type QuestDescriptionRules struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	RulesStrings *types.Slice[string] `xml:"rulesStrings"`
}

func (q *QuestDescriptionRules) Assign(*xml.Element) error {
	return nil
}

func (q *QuestDescriptionRules) CountValidatedField() int {
	if q.FieldValidated == nil {
		return 0
	}
	return len(q.FieldValidated)
}

func (q *QuestDescriptionRules) Equal(*QuestDescriptionRules) bool {
	return false
}

func (q *QuestDescriptionRules) GetAttributes() attributes.Attributes {
	return q.Attr
}

func (q *QuestDescriptionRules) GetPath() string {
	return ""
}

func (q *QuestDescriptionRules) Greater(*QuestDescriptionRules) bool {
	return false
}

func (q *QuestDescriptionRules) IsValidField(field string) bool {
	return q.FieldValidated[field]
}

func (q *QuestDescriptionRules) Less(*QuestDescriptionRules) bool {
	return false
}

func (q *QuestDescriptionRules) SetAttributes(attr attributes.Attributes) {
	q.Attr = attr
	return
}

func (q *QuestDescriptionRules) Val() *QuestDescriptionRules {
	return nil
}

func (q *QuestDescriptionRules) ValidateField(field string) {
	if q.FieldValidated == nil {
		q.FieldValidated = make(map[string]bool)
	}
	q.FieldValidated[field] = true
	return
}
