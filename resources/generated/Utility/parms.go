// Code generated by rimworld-editor. DO NOT EDIT.

package utility

import (
	"github.com/cruffinoni/rimworld-editor/xml"
	"github.com/cruffinoni/rimworld-editor/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/xml/types/embedded"
)

type Parms struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	FactionOf               string                 `xml:"factionOf"`
	ArrivingPawns           string                 `xml:"arrivingPawns"`
	CustomLetterLabel       *embedded.Type[string] `xml:"customLetterLabel"`
	CustomLetterText        *embedded.Type[string] `xml:"customLetterText"`
	ArrivingPawnsLabelDef   *embedded.Type[string] `xml:"arrivingPawnsLabelDef"`
	HiddenSitePartsPossible string                 `xml:"hiddenSitePartsPossible"`
}

func (p *Parms) Assign(*xml.Element) error {
	return nil
}

func (p *Parms) CountValidatedField() int {
	if p.FieldValidated == nil {
		return 0
	}
	return len(p.FieldValidated)
}

func (p *Parms) Equal(*Parms) bool {
	return false
}

func (p *Parms) GetAttributes() attributes.Attributes {
	return p.Attr
}

func (p *Parms) GetPath() string {
	return ""
}

func (p *Parms) Greater(*Parms) bool {
	return false
}

func (p *Parms) IsValidField(field string) bool {
	return p.FieldValidated[field]
}

func (p *Parms) Less(*Parms) bool {
	return false
}

func (p *Parms) SetAttributes(attr attributes.Attributes) {
	p.Attr = attr
	return
}

func (p *Parms) Val() *Parms {
	return nil
}

func (p *Parms) ValidateField(field string) {
	if p.FieldValidated == nil {
		p.FieldValidated = make(map[string]bool)
	}
	p.FieldValidated[field] = true
	return
}
