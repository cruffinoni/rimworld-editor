// Code generated by rimworld-editor. DO NOT EDIT.

package ritualeffectdefs

import (
	"github.com/cruffinoni/rimworld-editor/internal/xml"
	"github.com/cruffinoni/rimworld-editor/internal/xml/attributes"
)

type Comps struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	FleckDef            string `xml:"fleckDef"`
	CompClass           string `xml:"compClass"`
	RequiredTag         string `xml:"requiredTag"`
	EastRotationOffset  string `xml:"eastRotationOffset"`
	WestRotationOffset  string `xml:"westRotationOffset"`
	NorthRotationOffset string `xml:"northRotationOffset"`
	SpawnIntervalTicks  int64  `xml:"spawnIntervalTicks"`
}

func (c *Comps) Assign(*xml.Element) error {
	return nil
}

func (c *Comps) CountValidatedField() int {
	if c.FieldValidated == nil {
		return 0
	}
	return len(c.FieldValidated)
}

func (c *Comps) Equal(*Comps) bool {
	return false
}

func (c *Comps) GetAttributes() attributes.Attributes {
	return c.Attr
}

func (c *Comps) GetPath() string {
	return ""
}

func (c *Comps) Greater(*Comps) bool {
	return false
}

func (c *Comps) IsValidField(field string) bool {
	return c.FieldValidated[field]
}

func (c *Comps) Less(*Comps) bool {
	return false
}

func (c *Comps) SetAttributes(attr attributes.Attributes) {
	c.Attr = attr
	return
}

func (c *Comps) Val() *Comps {
	return nil
}

func (c *Comps) ValidateField(field string) {
	if c.FieldValidated == nil {
		c.FieldValidated = make(map[string]bool)
	}
	c.FieldValidated[field] = true
	return
}
