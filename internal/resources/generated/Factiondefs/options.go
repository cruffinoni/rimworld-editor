// Code generated by rimworld-editor. DO NOT EDIT.

package factiondefs

import (
	"github.com/cruffinoni/rimworld-editor/internal/xml"
	"github.com/cruffinoni/rimworld-editor/internal/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/internal/xml/types/embedded"
)

type Options struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	Empire_Fighter_Trooper    int64                 `xml:"Empire_Fighter_Trooper"`
	Empire_Fighter_Janissary  float64               `xml:"Empire_Fighter_Janissary"`
	Empire_Fighter_Cataphract int64                 `xml:"Empire_Fighter_Cataphract"`
	Empire_Fighter_Champion   int64                 `xml:"Empire_Fighter_Champion"`
	Empire_Fighter_Grenadier  int64                 `xml:"Empire_Fighter_Grenadier"`
	Drifter                   int64                 `xml:"Drifter"`
	Town_Councilman           int64                 `xml:"Town_Councilman"`
	Hunter                    int64                 `xml:"Hunter"`
	Tribal_Child              *embedded.Type[int64] `xml:"Tribal_Child"`
	Grenadier_EMP             float64               `xml:"Grenadier_EMP"`
	Mercenary_Heavy           int64                 `xml:"Mercenary_Heavy"`
	Pirate                    int64                 `xml:"Pirate"`
	Villager_Child            *embedded.Type[int64] `xml:"Villager_Child"`
	Tribal_Archer             int64                 `xml:"Tribal_Archer"`
	Tribal_Breacher           int64                 `xml:"Tribal_Breacher"`
	Tribal_Farmer             int64                 `xml:"Tribal_Farmer"`
	Thrasher                  int64                 `xml:"Thrasher"`
	Mercenary_Slasher         int64                 `xml:"Mercenary_Slasher"`
	Mercenary_Elite           int64                 `xml:"Mercenary_Elite"`
	Tribal_HeavyArcher        int64                 `xml:"Tribal_HeavyArcher"`
	Tribal_Warrior            int64                 `xml:"Tribal_Warrior"`
	Villager                  int64                 `xml:"Villager"`
	Town_Guard                int64                 `xml:"Town_Guard"`
	Mercenary_Sniper          int64                 `xml:"Mercenary_Sniper"`
	Scavenger                 int64                 `xml:"Scavenger"`
	Tribal_ChiefMelee         float64               `xml:"Tribal_ChiefMelee"`
	Tribal_Logger             int64                 `xml:"Tribal_Logger"`
	Tribal_Berserker          int64                 `xml:"Tribal_Berserker"`
	PirateBoss                int64                 `xml:"PirateBoss"`
	Grenadier_Destructive     float64               `xml:"Grenadier_Destructive"`
	Mercenary_Gunner          int64                 `xml:"Mercenary_Gunner"`
	Miner                     int64                 `xml:"Miner"`
	Tribal_ChiefRanged        int64                 `xml:"Tribal_ChiefRanged"`
	Tribal_Miner              int64                 `xml:"Tribal_Miner"`
	Grenadier_Smoke           float64               `xml:"Grenadier_Smoke"`
	Logger                    int64                 `xml:"Logger"`
	Farmer                    int64                 `xml:"Farmer"`
	Tribal_Hunter             int64                 `xml:"Tribal_Hunter"`
	Tribal_Penitent           int64                 `xml:"Tribal_Penitent"`
	Mech_Tesseron             *embedded.Type[int64] `xml:"Mech_Tesseron"`
	Mech_CentipedeBlaster     int64                 `xml:"Mech_CentipedeBlaster"`
	Mech_CentipedeGunner      int64                 `xml:"Mech_CentipedeGunner"`
	Mech_Diabolus             *embedded.Type[int64] `xml:"Mech_Diabolus"`
	Mech_Lancer               int64                 `xml:"Mech_Lancer"`
	Mech_Apocriton            *embedded.Type[int64] `xml:"Mech_Apocriton"`
	Mech_Pikeman              int64                 `xml:"Mech_Pikeman"`
	Mech_Centurion            *embedded.Type[int64] `xml:"Mech_Centurion"`
	Mech_Militor              *embedded.Type[int64] `xml:"Mech_Militor"`
	Mech_Legionary            *embedded.Type[int64] `xml:"Mech_Legionary"`
	Mech_Warqueen             *embedded.Type[int64] `xml:"Mech_Warqueen"`
	Mech_CentipedeBurner      int64                 `xml:"Mech_CentipedeBurner"`
	Mech_Scyther              int64                 `xml:"Mech_Scyther"`
	Mech_Termite_Breach       int64                 `xml:"Mech_Termite_Breach"`
	Mech_Scorcher             *embedded.Type[int64] `xml:"Mech_Scorcher"`
}

func (o *Options) Assign(*xml.Element) error {
	return nil
}

func (o *Options) CountValidatedField() int {
	if o.FieldValidated == nil {
		return 0
	}
	return len(o.FieldValidated)
}

func (o *Options) Equal(*Options) bool {
	return false
}

func (o *Options) GetAttributes() attributes.Attributes {
	return o.Attr
}

func (o *Options) GetPath() string {
	return ""
}

func (o *Options) Greater(*Options) bool {
	return false
}

func (o *Options) IsValidField(field string) bool {
	return o.FieldValidated[field]
}

func (o *Options) Less(*Options) bool {
	return false
}

func (o *Options) SetAttributes(attr attributes.Attributes) {
	o.Attr = attr
	return
}

func (o *Options) Val() *Options {
	return nil
}

func (o *Options) ValidateField(field string) {
	if o.FieldValidated == nil {
		o.FieldValidated = make(map[string]bool)
	}
	o.FieldValidated[field] = true
	return
}
