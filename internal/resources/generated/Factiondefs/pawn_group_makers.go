// Code generated by rimworld-editor. DO NOT EDIT.

package factiondefs

import (
	"github.com/cruffinoni/rimworld-editor/internal/xml"
	"github.com/cruffinoni/rimworld-editor/internal/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/internal/xml/types"
)

type PawnGroupMakers struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	KindDef              string               `xml:"kindDef"`
	Traders              *Traders             `xml:"traders"`
	Carriers             *Carriers            `xml:"carriers"`
	Guards               *Guards              `xml:"guards"`
	Commonality          float64              `xml:"commonality"`
	Options              *Options             `xml:"options"`
	MaxTotalPoints       int64                `xml:"maxTotalPoints"`
	DisallowedStrategies *types.Slice[string] `xml:"disallowedStrategies"`
}

func (p *PawnGroupMakers) Assign(*xml.Element) error {
	return nil
}

func (p *PawnGroupMakers) CountValidatedField() int {
	if p.FieldValidated == nil {
		return 0
	}
	return len(p.FieldValidated)
}

func (p *PawnGroupMakers) Equal(*PawnGroupMakers) bool {
	return false
}

func (p *PawnGroupMakers) GetAttributes() attributes.Attributes {
	return p.Attr
}

func (p *PawnGroupMakers) GetPath() string {
	return ""
}

func (p *PawnGroupMakers) Greater(*PawnGroupMakers) bool {
	return false
}

func (p *PawnGroupMakers) IsValidField(field string) bool {
	return p.FieldValidated[field]
}

func (p *PawnGroupMakers) Less(*PawnGroupMakers) bool {
	return false
}

func (p *PawnGroupMakers) SetAttributes(attr attributes.Attributes) {
	p.Attr = attr
	return
}

func (p *PawnGroupMakers) Val() *PawnGroupMakers {
	return nil
}

func (p *PawnGroupMakers) ValidateField(field string) {
	if p.FieldValidated == nil {
		p.FieldValidated = make(map[string]bool)
	}
	p.FieldValidated[field] = true
	return
}
