// Code generated by rimworld-editor. DO NOT EDIT.

package pawnrelationdefs

import (
	"github.com/cruffinoni/rimworld-editor/internal/xml"
	"github.com/cruffinoni/rimworld-editor/internal/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/internal/xml/types"
)

type PawnRelationDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	WorkerClass            string               `xml:"workerClass"`
	DefName                string               `xml:"defName"`
	Label                  string               `xml:"label"`
	LabelFemale            string               `xml:"labelFemale"`
	Importance             int64                `xml:"importance"`
	DiedThought            string               `xml:"diedThought"`
	DiedThoughtFemale      string               `xml:"diedThoughtFemale"`
	KilledThought          string               `xml:"killedThought"`
	KilledThoughtFemale    string               `xml:"killedThoughtFemale"`
	LostThought            string               `xml:"lostThought"`
	LostThoughtFemale      string               `xml:"lostThoughtFemale"`
	SoldThoughts           *types.Slice[string] `xml:"soldThoughts"`
	OpinionOffset          int64                `xml:"opinionOffset"`
	GenerationChanceFactor float64              `xml:"generationChanceFactor"`
	RomanceChanceFactor    float64              `xml:"romanceChanceFactor"`
	IncestOpinionOffset    int64                `xml:"incestOpinionOffset"`
	InbredChanceOnChild    float64              `xml:"inbredChanceOnChild"`
	Implied                bool                 `xml:"implied"`
	FamilyByBloodRelation  bool                 `xml:"familyByBloodRelation"`
	Reflexive              bool                 `xml:"reflexive"`
}

func (p *PawnRelationDef) Assign(*xml.Element) error {
	return nil
}

func (p *PawnRelationDef) CountValidatedField() int {
	if p.FieldValidated == nil {
		return 0
	}
	return len(p.FieldValidated)
}

func (p *PawnRelationDef) Equal(*PawnRelationDef) bool {
	return false
}

func (p *PawnRelationDef) GetAttributes() attributes.Attributes {
	return p.Attr
}

func (p *PawnRelationDef) GetPath() string {
	return ""
}

func (p *PawnRelationDef) Greater(*PawnRelationDef) bool {
	return false
}

func (p *PawnRelationDef) IsValidField(field string) bool {
	return p.FieldValidated[field]
}

func (p *PawnRelationDef) Less(*PawnRelationDef) bool {
	return false
}

func (p *PawnRelationDef) SetAttributes(attr attributes.Attributes) {
	p.Attr = attr
	return
}

func (p *PawnRelationDef) Val() *PawnRelationDef {
	return nil
}

func (p *PawnRelationDef) ValidateField(field string) {
	if p.FieldValidated == nil {
		p.FieldValidated = make(map[string]bool)
	}
	p.FieldValidated[field] = true
	return
}
