// Code generated by rimworld-editor. DO NOT EDIT.

package ideosymboldefs

import (
	"github.com/cruffinoni/rimworld-editor/internal/xml"
	"github.com/cruffinoni/rimworld-editor/internal/xml/attributes"
	"github.com/cruffinoni/rimworld-editor/internal/xml/types"
)

type IdeoColorDef struct {
	Attr           attributes.Attributes
	FieldValidated map[string]bool

	DefName   string               `xml:"defName"`
	ColorDef  string               `xml:"colorDef"`
	Memes     *types.Slice[string] `xml:"memes"`
	Cultures  *types.Slice[string] `xml:"cultures"`
	ColorType string               `xml:"colorType"`
	Color     string               `xml:"color"`
	IconPath  string               `xml:"iconPath"`
}

func (i *IdeoColorDef) Assign(*xml.Element) error {
	return nil
}

func (i *IdeoColorDef) CountValidatedField() int {
	if i.FieldValidated == nil {
		return 0
	}
	return len(i.FieldValidated)
}

func (i *IdeoColorDef) Equal(*IdeoColorDef) bool {
	return false
}

func (i *IdeoColorDef) GetAttributes() attributes.Attributes {
	return i.Attr
}

func (i *IdeoColorDef) GetPath() string {
	return ""
}

func (i *IdeoColorDef) Greater(*IdeoColorDef) bool {
	return false
}

func (i *IdeoColorDef) IsValidField(field string) bool {
	return i.FieldValidated[field]
}

func (i *IdeoColorDef) Less(*IdeoColorDef) bool {
	return false
}

func (i *IdeoColorDef) SetAttributes(attr attributes.Attributes) {
	i.Attr = attr
	return
}

func (i *IdeoColorDef) Val() *IdeoColorDef {
	return nil
}

func (i *IdeoColorDef) ValidateField(field string) {
	if i.FieldValidated == nil {
		i.FieldValidated = make(map[string]bool)
	}
	i.FieldValidated[field] = true
	return
}
